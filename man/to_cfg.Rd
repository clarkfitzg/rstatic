% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/to_cfg.R
\name{to_cfg}
\alias{to_cfg}
\title{Build Control Flow Graph from ASTNodes}
\usage{
to_cfg(ast, in_place = FALSE, ssa = TRUE)
}
\arguments{
\item{ast}{A quoted R expression or an abstract syntax tree.}

\item{in_place}{(logical) Don't copy AST before generating CFG?}

\item{ssa}{(logical) Return CFG in SSA form?}
}
\value{
The control flow graph as a CFGraph object. The \code{[[} operator
can be used to extract individual basic blocks from the graph.
}
\description{
This function builds the control flow graph (CFG) for a quoted R expression
or abstract syntax tree. When the root of the AST is a Function object, the
CFG is built for its body.
}
\details{
A control flow graph is a directed graph that represents the flow of control
in a program. Each node or "basic block" contains a linear sequence of
program instructions. Every basic block ends with a terminator instruction,
which branches to one or more basic blocks. Edges in the graph indicate
these branches.

An if-statement makes a downward diamond in the graph and a while- or
for-loop makes a cycle.
}
