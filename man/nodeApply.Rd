% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/node_apply.R
\name{nodeApply}
\alias{nodeApply}
\title{Apply Function to AST}
\usage{
nodeApply(node, fn, ..., inPlace = FALSE)
}
\arguments{
\item{node}{(ASTNode) The AST.}

\item{fn}{(function) The function to apply to each node. The first argument
to the function should be the node itself.}

\item{...}{Additional arguments to \code{fn}.}

\item{inPlace}{(logical) Whether the AST should be copied before
transformation.}
}
\description{
This function applies a function to all elements of an AST. The result is
then stored back into the same position in the AST.
}
\details{
The typical use-case is to apply simple transformations to the AST without
having to write a method to traverse every class. The tradeoff is that this
function is always slower to run than a hand-written method.

If you want to collect and return data about nodes without modifying them,
then see \code{nodeCollect()}.
}
